<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace必须指向Dao接口 -->
<mapper namespace="org.hepx.ticket.mapper.TradeMapper">
    <cache/>

    <sql id="base_columns">
        id, name, telphone, idCard,tradeNo,createTime,inTicketMoney,outTicketMoney,tradeTotal,tradeStatus
    </sql>

    <insert id="createTrade" parameterType="t_trade" useGeneratedKeys="true" keyProperty="id">
        insert into tb_trade (name, telphone, idCard,tradeNo,createTime,inTicketMoney,outTicketMoney,tradeTotal,tradeStatus)
        values (#{name}, #{telphone}, #{idCard},#{tradeNo},#{createTime},#{inTicketMoney},#{outTicketMoney},#{tradeTotal},#{tradeStatus})
    </insert>

    <update id="updateTrade" parameterType="t_trade">
        update tb_trade
        <trim prefix="set" suffixOverrides=",">
            <if test="inTicketMoney != null">
                inTicketMoney=#{inTicketMoney},
            </if>
            <if test="outTicketMoney != null">
                outTicketMoney=#{outTicketMoney},
            </if>
            <if test="tradeTotal != null">
                tradeTotal=#{tradeTotal},
            </if>
            <if test="tradeStatus != null">
                tradeStatus=#{tradeStatus},
            </if>
        </trim>
        where id=#{id}
    </update>

    <delete id="deleteTrade" parameterType="long">
        delete from tb_trade where id=#{tradeId}
    </delete>

    <select id="findOne" parameterType="long" resultType="t_trade">
        select
        <include refid="base_columns"/>
        from tb_trade
        where id=#{tradeId}
    </select>

    <select id="findAll" resultType="t_trade">
        select
        <include refid="base_columns"/>
        from tb_trade
        order by id desc
    </select>

    <select id="findLast" resultType="t_trade">
        select tradeNo from tb_trade order by id desc limit 1
    </select>

    <select id="findByCondition" resultType="t_trade" parameterType="map">
        select A.* from tb_trade A LEFT JOIN tb_ticket B ON A.id=B.inTradeId
        <where>
            <if test="ticketNo != null and ticketNo != ''">
                and B.ticketNo=#{ticketNo}
            </if>
            <if test="startTime != null and startTime != '' and endTime != null and endTime != ''">
                and A.createTime between #{startTime} and #{endTime}
            </if>
        </where>
        union
        select A.* from tb_trade A LEFT JOIN tb_ticket B ON A.id=B.outTradeId
        <where>
            <if test="ticketNo != null and ticketNo != ''">
                and B.ticketNo=#{ticketNo}
            </if>
            <if test="startTime != null and startTime != '' and endTime != null and endTime != ''">
                and A.createTime between #{startTime} and #{endTime}
            </if>
        </where>
    </select>

    <select id="statTradeByAll" resultType="long">
        select count(id) from tb_trade
    </select>

    <select id="statTradeByDay" resultType="long" parameterType="string">
        select count(id) from tb_trade
        where createTime=#{date}
    </select>
</mapper>
